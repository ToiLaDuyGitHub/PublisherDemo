# Security
AbstractAccessDecisionManager.accessDenied=Truy c\u1EADp b\u1ECB t\u1EEB ch\u1ED1i
AbstractLdapAuthenticationProvider.emptyPassword=Empty Password
AbstractSecurityInterceptor.authenticationNotFound=An Authentication object was not found in the SecurityContext
AbstractUserDetailsAuthenticationProvider.badCredentials=T\u00EAn \u0111\u0103ng nh\u1EADp ho\u1EB7c m\u1EADt kh\u1EA9u kh\u00F4ng \u0111\u00FAng
AbstractUserDetailsAuthenticationProvider.credentialsExpired=Th\u00F4ng tin \u0111\u0103ng nh\u1EADp c\u1EE7a ng\u01B0\u1EDDi d\u00F9ng \u0111\u00E3 h\u1EBFt h\u1EA1n
AbstractUserDetailsAuthenticationProvider.disabled=T\u00E0i kho\u1EA3n \u0111\u00E3 b\u1ECB v\u00F4 hi\u1EC7u ho\u00E1
AbstractUserDetailsAuthenticationProvider.expired=T\u00E0i kho\u1EA3n \u0111\u00E3 h\u1EBFt hi\u1EC7u l\u1EF1c
AbstractUserDetailsAuthenticationProvider.locked=T\u00E0i kho\u1EA3n \u0111\u00E3 b\u1ECB kho\u00E1 v\u00EC \u0111\u00E3 nh\u1EADp sai th\u00F4ng tin qu\u00E1 s\u1ED1 l\u1EA7n quy \u0111\u1ECBnh
AbstractUserDetailsAuthenticationProvider.onlySupports=Only UsernamePasswordAuthenticationToken is supported
AccountStatusUserDetailsChecker.credentialsExpired=Th\u00F4ng tin \u0111\u0103ng nh\u1EADp c\u1EE7a ng\u01B0\u1EDDi d\u00F9ng \u0111\u00E3 h\u1EBFt h\u1EA1n
AccountStatusUserDetailsChecker.disabled=T\u00E0i kho\u1EA3n \u0111\u00E3 b\u1ECB v\u00F4 hi\u1EC7u ho\u00E1
AccountStatusUserDetailsChecker.expired=T\u00E0i kho\u1EA3n \u0111\u00E3 h\u1EBFt hi\u1EC7u l\u1EF1c
AccountStatusUserDetailsChecker.locked=T\u00E0i kho\u1EA3n \u0111\u00E3 b\u1ECB kho\u00E1
AclEntryAfterInvocationProvider.noPermission=Authentication {0} has NO permissions to the domain object {1}
AnonymousAuthenticationProvider.incorrectKey=The presented AnonymousAuthenticationToken does not contain the expected key
BindAuthenticator.badCredentials=T\u00EAn \u0111\u0103ng nh\u1EADp ho\u1EB7c m\u1EADt kh\u1EA9u kh\u00F4ng \u0111\u00FAng
BindAuthenticator.emptyPassword=Empty Password
CasAuthenticationProvider.incorrectKey=The presented CasAuthenticationToken does not contain the expected key
CasAuthenticationProvider.noServiceTicket=Failed to provide a CAS service ticket to validate
ConcurrentSessionControlAuthenticationStrategy.exceededAllowed=Maximum sessions of {0} for this principal exceeded
DigestAuthenticationFilter.incorrectRealm=Response realm name {0} does not match system realm name of {1}
DigestAuthenticationFilter.incorrectResponse=Incorrect response
DigestAuthenticationFilter.missingAuth=Missing mandatory digest value for 'auth' QOP; received header {0}
DigestAuthenticationFilter.missingMandatory=Missing mandatory digest value; received header {0}
DigestAuthenticationFilter.nonceCompromised=Nonce token compromised {0}
DigestAuthenticationFilter.nonceEncoding=Nonce is not encoded in Base64; received nonce {0}
DigestAuthenticationFilter.nonceExpired=Nonce has expired/timed out
DigestAuthenticationFilter.nonceNotNumeric=Nonce token should have yielded a numeric first token, but was {0}
DigestAuthenticationFilter.nonceNotTwoTokens=Nonce should have yielded two tokens but was {0}
DigestAuthenticationFilter.usernameNotFound=Username {0} not found
JdbcDaoImpl.noAuthority=User {0} has no GrantedAuthority
JdbcDaoImpl.notFound=User {0} not found
LdapAuthenticationProvider.badCredentials=T\u00EAn \u0111\u0103ng nh\u1EADp ho\u1EB7c m\u1EADt kh\u1EA9u kh\u00F4ng \u0111\u00FAng
LdapAuthenticationProvider.credentialsExpired=Th\u00F4ng tin \u0111\u0103ng nh\u1EADp c\u1EE7a ng\u01B0\u1EDDi d\u00F9ng \u0111\u00E3 h\u1EBFt h\u1EA1n
LdapAuthenticationProvider.disabled=T\u00E0i kho\u1EA3n \u0111\u00E3 b\u1ECB v\u00F4 hi\u1EC7u ho\u00E1
LdapAuthenticationProvider.expired=T\u00E0i kho\u1EA3n \u0111\u00E3 h\u1EBFt hi\u1EC7u l\u1EF1c
LdapAuthenticationProvider.locked=T\u00E0i kho\u1EA3n \u0111\u00E3 b\u1ECB kho\u00E1
LdapAuthenticationProvider.emptyUsername=Empty username not allowed
LdapAuthenticationProvider.onlySupports=Only UsernamePasswordAuthenticationToken is supported
PasswordComparisonAuthenticator.badCredentials=T\u00EAn \u0111\u0103ng nh\u1EADp ho\u1EB7c m\u1EADt kh\u1EA9u kh\u00F4ng \u0111\u00FAng
PersistentTokenBasedRememberMeServices.cookieStolen=Invalid remember-me token (Series/token) mismatch. Implies previous cookie theft attack.
ProviderManager.providerNotFound=No AuthenticationProvider found for {0}
RememberMeAuthenticationProvider.incorrectKey=The presented RememberMeAuthenticationToken does not contain the expected key
RunAsImplAuthenticationProvider.incorrectKey=The presented RunAsUserToken does not contain the expected key
SubjectDnX509PrincipalExtractor.noMatching=No matching pattern was found in subjectDN: {0}
SwitchUserFilter.noCurrentUser=No current user associated with this request
SwitchUserFilter.noOriginalAuthentication=Could not find original Authentication object
ExceptionTranslationFilter.insufficientAuthentication=Th\u00F4ng tin x\u00E1c th\u1EF1c kh\u00F4ng \u0111\u1EA7y \u0111\u1EE7
# Error
error.validation=Tham s\u1ED1 kh\u00F4ng h\u1EE3p l\u1EC7.
error.optimistic-locking=Th\u00F4ng tin \u0111\u1ED1i t\u01B0\u1EE3ng \u0111\u00E3 b\u1ECB thay \u0111\u1ED5i b\u1EDFi ti\u1EBFn tr\u00ECnh kh\u00E1c, xin h\u00E3y ki\u1EC3m tra.
error.grpc-service.cannot-connect=Kh\u00F4ng th\u1EC3 k\u1EBFt n\u1ED1i t\u1EDBi d\u1ECBch v\u1EE5: {0}.
# User
error.user.captcha.invalidate=M\u00E3 captcha kh\u00F4ng \u0111\u00FAng.
error.user.notfound=Kh\u00F4ng t\u00ECm th\u1EA5y ng\u01B0\u1EDDi d\u00F9ng.
error.user.id.unchangeable=ID kh\u00F4ng \u0111\u01B0\u1EE3c thay \u0111\u1ED5i.
error.user.username.exist=T\u00EAn \u0111\u0103ng nh\u1EADp \u0111\u00E3 t\u1ED3n t\u1EA1i.
error.user.username.unchangeable=T\u00EAn \u0111\u0103ng nh\u1EADp kh\u00F4ng \u0111\u01B0\u1EE3c thay \u0111\u1ED5i.
error.user.type.unchangeable=Lo\u1EA1i ng\u01B0\u1EDDi d\u00F9ng kh\u00F4ng \u0111\u01B0\u1EE3c thay \u0111\u1ED5i.
error.user.group.unchangeable=Nh\u00F3m ng\u01B0\u1EDDi n\u1ED9p thu\u1EBF kh\u00F4ng \u0111\u01B0\u1EE3c thay \u0111\u1ED5i.
error.user.username.notfound=Kh\u00F4ng t\u00ECm th\u1EA5y t\u00EAn \u0111\u0103ng nh\u1EADp.
error.user.password.used=M\u1EADt kh\u1EA9u \u0111\u00E3 s\u1EED d\u1EE5ng.
error.user.logged=Ng\u01B0\u1EDDi d\u00F9ng \u0111\u00E3 \u0111\u0103ng nh\u1EADp.
error.user.password.wrong=M\u1EADt kh\u1EA9u kh\u00F4ng \u0111\u00FAng.
error.user.mobile-phone.invalid=S\u1ED1 di \u0111\u1ED9ng kh\u00F4ng h\u1EE3p l\u1EC7.
error.user.username.contain.special.character=T\u00EAn \u0111\u0103ng nh\u1EADp ch\u1EE9a k\u00FD t\u1EF1 \u0111\u1EB7c bi\u1EC7t.
error.user.password.contains.multi-characters=M\u1EADt kh\u1EA9u ph\u1EA3i ch\u1EE9a c\u1EA3 k\u00FD t\u1EF1 th\u01B0\u1EDDng, k\u00FD t\u1EF1 hoa, k\u00FD t\u1EF1 s\u1ED1 v\u00E0 k\u00FD t\u1EF1 \u0111\u1EB7c bi\u1EC7t.
error.user.mobile-phone.Size.message=\u0110\u1ED9 d\u00E0i s\u1ED1 \u0111i\u1EC7n tho\u1EA1i ph\u1EA3i n\u1EB1m gi\u1EEFa {0} v\u00E0 {1}.
error.user.email.Size.message=\u0110\u1ED9 d\u00E0i email ph\u1EA3i n\u1EB1m gi\u1EEFa {0} v\u00E0 {1}.
error.user.password.Size.message=\u0110\u1ED9 d\u00E0i m\u1EADt kh\u1EA9u ph\u1EA3i n\u1EB1m gi\u1EEFa {0} v\u00E0 {1}.
error.user.online.unchangeable=B\u1EA1n kh\u00F4ng th\u1EC3 s\u1EEDa th\u00F4ng tin ng\u01B0\u1EDDi d\u00F9ng n\u00E0y.
error.user.logged.delete=Kh\u00F4ng \u0111\u01B0\u1EE3c x\u00F3a ng\u01B0\u1EDDi d\u00F9ng \u0111\u00E3 \u0111\u0103ng nh\u1EADp.
error.user.password.contains.space=M\u1EADt kh\u1EA9u kh\u00F4ng \u0111\u01B0\u1EE3c ch\u1EE9a kho\u1EA3ng tr\u1EAFng.
error.user.previous-username.notfound=T\u00EAn \u0111\u0103ng nh\u1EADp c\u0169 kh\u00F4ng t\u00ECm th\u1EA5y.
error.user.previous-user.wrong=Th\u00F4ng tin ng\u01B0\u1EDDi d\u00F9ng c\u0169 kh\u00F4ng ch\u00EDnh x\u00E1c.
error.user.reset-password.wrong=Th\u00F4ng tin kh\u00F4ng ch\u00EDnh x\u00E1c.
error.user.gender.not-null=Gi\u1EDBi t\u00EDnh b\u1EAFt bu\u1ED9c ph\u1EA3i ch\u1ECDn.
error.user.password.about-to-expire=M\u1EADt kh\u1EA9u s\u1EAFp h\u1EBFt h\u1EA1n, vui l\u00F2ng thay \u0111\u1ED5i m\u1EADt kh\u1EA9u m\u1EDBi.
error.user.password.expire=M\u1EADt kh\u1EA9u \u0111\u00E3 h\u1EBFt h\u1EA1n, b\u1EA1n c\u1EA7n thay \u0111\u1ED5i m\u1EADt kh\u1EA9u m\u1EDBi.
error.user.reset-password.online=Ng\u01B0\u1EDDi d\u00F9ng \u0111ang \u0111\u0103ng nh\u1EADp.
error.user.previous-user.online=Kh\u00F4ng \u0111\u01B0\u1EE3c s\u1EED d\u1EE5ng t\u00EAn \u0111\u0103ng nh\u1EADp c\u0169 \u0111ang online.
# Privilege
error.privilege.notfound=Kh\u00F4ng t\u00ECm th\u1EA5y t\u00EDnh n\u0103ng.
error.privilege.used=T\u00EDnh n\u0103ng \u0111ang \u0111\u01B0\u1EE3c s\u1EED d\u1EE5ng.
error.privilege.id.unchangeable=ID kh\u00F4ng \u0111\u01B0\u1EE3c thay \u0111\u1ED5i.
error.privilege.code.exist=M\u00E3 t\u00EDnh n\u0103ng \u0111\u00E3 t\u1ED3n t\u1EA1i.
error.privilege.code.unchangeable=M\u00E3 t\u00EDnh n\u0103ng kh\u00F4ng \u0111\u01B0\u1EE3c thay \u0111\u1ED5i.
# Role
error.role.notfound=Kh\u00F4ng t\u00ECm th\u1EA5y vai tr\u00F2 ng\u01B0\u1EDDi d\u00F9ng.
error.role.used=Vai tr\u00F2 ng\u01B0\u1EDDi d\u00F9ng \u0111ang \u0111\u01B0\u1EE3c s\u1EED d\u1EE5ng.
error.role.id.unchangeable=ID kh\u00F4ng \u0111\u01B0\u1EE3c thay \u0111\u1ED5i.
error.role.name.exist=T\u00EAn vai tr\u00F2 \u0111\u00E3 t\u1ED3n t\u1EA1i.
error.role.id.invalid=ID c\u1EE7a vai tr\u00F2 kh\u00F4ng h\u1EE3p l\u1EC7.
# Group
error.group.id.unchangeable=ID kh\u00F4ng \u0111\u01B0\u1EE3c thay \u0111\u1ED5i.
error.group.id.invalid=ID kh\u00F4ng h\u1EE3p l\u1EC7.